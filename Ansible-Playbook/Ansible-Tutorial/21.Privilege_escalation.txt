Privilege Escalation

ansible_become_method
-------------------------
The method to use to gain superuser privileges. Defaults to sudo, but it can be any of the following: sudo, su, pbrun, pfexec, or doas. Tools such as pbrun are commercial security tools, which will not apply most of the time. sudo is the best choice for most people.

ansible_become_user
-------------------------

By default, become will elevate you to the root level. If you have another user who has the correct permissions to complete the tasks that you're running and want to use that instead, you can use ansible_become_user. This is equivalent to running commands with the sudo -u myuser command.

These privilege-escalation options can be set in the inventory file, but they won't actually be used unless you set become: true in your playbooks.

Given the following inventory file, alpha and bravo will both use the automation user when become: true is set in a playbook. frontend will use the ansible user, and yellow will use root, which is the default:

alpha.example.com ansible_become_user=automation
bravo.example.com ansible_become_user=automation
frontend.example.com ansible_become_user=ansible
yellow.example. com


[web_centos5]
fe1.example.com ansible_user=michael ansible_ssh_private_key_file=michael.key
fe2.example.com ansible_user=michael ansible_ssh_private_key_file=michael.key

[web_centos6]
web[1:3].example.com ansible_user=automation ansible_port=50022 ansible_ssh_private_key_file=/path/to/auto.key

[database_centos6]
db.example.com ansible_user=michael ansible_ssh_private_key_file=/path/to/db.key

[loadbalancer_centos6]
lb.example.com ansible_user=automation ansible_port=50022 ansible_ssh_private_key_file=/path/to/lb.key 

[web:children]
web_centos5
web_centos6

[database:children]
database_centos6

[loadbalancer:children]
loadbalancer_centos6