# Conditional

#Basic Conditionals with “When”
#----------------------------------
conditional_basic_false.yml
---
- name: conditional_basic
  hosts: all
  vars:
    configure_nginx: true
  tasks:
    - name: reload nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded
      when: configure_nginx

# This is the output of the execution of conditional_basic_true.yml. In this execution, 
#   the play is executed against the demo1.example.com node. The output is highlighted in green. As you can see, 
#   the task of the task reload nginx is read by Ansible and executed successfully in the conditional statement.


# Conditionals Based on ansible_facts
#--------------------------------------
---
- name: conditional_facts
  hosts: all
  tasks:
  - name: Shut down Debian-like systems
    ansible.builtin.command: /sbin/shutdown -t now
    when: ansible_facts['os_family'] == "Debian"




#Below script will install apache2 on Debian and ignore centos hosts
---
- hosts: all
  become: yes
  tasks:
  - name: Install apache2 on Ubuntu machines
    apt: name=apache2 state=latest
    when: ansible_os_family == "Debian"
    register: apt_output

  - name: Display the console output
    debug: var=apt_output

#Below script will install httpd on centos and ignore ubuntu hosts

  - name: Install httpd on centos machines
    yum: name=httpd state=latest
    when: ansible_os_family == "RedHat"
    register: yum_output
  - name: Display the console output
    debug: var=yum_output

 #become:yes, it will allow us to become the root user since the installation requires sudo access. 
